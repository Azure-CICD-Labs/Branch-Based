name: Terraform Plan and Apply – Dev

on:
  workflow_run:
    workflows: ["Terraform CI - Dev"]
    types:
      - completed

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  ##################################################################
  # 1) Terraform Plan for DEV
  ##################################################################
  terraform-plan-dev:
    name: Terraform Plan – Dev
    runs-on: ubuntu-latest

    environment:
      name: dev

    env:
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TFSTATE_CONTAINER_NAME: dev-tfstate

    outputs:
      tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Format Check
        working-directory: terraform
        run: terraform fmt -check

      - name: Terraform Plan
        working-directory: terraform
        id: tf-plan
        run: |
          exitcode=0
          terraform plan -detailed-exitcode -no-color -out=tfplan || exitcode=$?
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
          if [ $exitcode -eq 1 ]; then
            echo "Terraform Plan Failed!"
            exit 1
          fi

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

      - name: Create Plan Summary Output
        id: tf-plan-string
        run: |
          TERRAFORM_PLAN=$(terraform show -no-color tfplan)
          delimiter=$(openssl rand -hex 8)
          echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## Terraform Plan Output" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo '```terraform' >> $GITHUB_OUTPUT
          echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "</details>" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT

      - name: Publish Plan to Task Summary
        env:
          SUMMARY: ${{ steps.tf-plan-string.outputs.summary }}
        run: echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY

      - name: Comment Plan on Pull Request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const summary = `\n${process.env.SUMMARY}\n`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            })

  ##################################################################
  # 2) Terraform APPLY for DEV (requires manual approval if configured)
  ##################################################################
  terraform-apply-dev:
    name: Terraform Apply – Dev
    runs-on: ubuntu-latest

    needs: [terraform-plan-dev]

    # Only run if:
    # - We are on dev branch push (not pull_request),
    # - The plan exit code was 2 (means changes to apply).
    if: >
      github.event_name == 'push'
      && github.ref == 'refs/heads/dev'
      && needs.terraform-plan-dev.outputs.tfplanExitCode == '2'

    environment:
      name: dev
      # Optional: Configure environment protection for dev approvals as desired.

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        env:
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TFSTATE_CONTAINER_NAME: dev-tfstate
        working-directory: terraform
        run: terraform init

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve tfplan
