name: Terraform CD - Prod

on:
  # Trigger this workflow only for pull requests to main
  pull_request:
    branches: [main]

permissions:
  contents: read
  id-token: write

jobs:
  plan-prod:
    name: Plan for Prod
    runs-on: ubuntu-latest
    environment: prod

    # Ensure the pull request is opened, synchronized, or reopened
    if: >
      github.event.pull_request.state == 'open' &&
      github.event.pull_request.base.ref == 'main'

    env:
      TF_VAR_container_name: ${{ vars.TFSTATE_CONTAINER_NAME }}
      TF_VAR_env: prod

    steps:
      - name: Check out main branch on repository
        uses: actions/checkout@v3

      - name: Azure Login (Prod)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Configure Env for Terraform OIDC
        run: |
          echo "ARM_USE_OIDC=true" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Terraform Init (Prod)
        working-directory: terraform
        run: |
          terraform init \
            -backend-config="container_name=${TF_VAR_container_name}" \
            -backend-config="key=multilayer-webapp-prod.tfstate"

      - name: Terraform Plan (Prod)
        working-directory: terraform
        run: terraform plan -out=prod.tfplan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v3
        with:
          name: terraform-prod-plan
          path: terraform/prod.tfplan

  apply-prod:
    name: Apply to Prod
    runs-on: ubuntu-latest
    needs: plan-prod
    environment:
      name: prod

    # Ensure the workflow runs for the pull request to main
    if: >
      github.event.pull_request.state == 'open' &&
      github.event.pull_request.base.ref == 'main'

    env:
      TF_VAR_container_name: ${{ vars.TFSTATE_CONTAINER_NAME }}

    steps:
      - name: Check out the main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Azure Login (Prod)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Configure Env for Terraform OIDC
        run: |
          echo "ARM_USE_OIDC=true" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Download Plan Artifact
        uses: actions/download-artifact@v3
        with:
          name: terraform-prod-plan
          path: terraform

      - name: Terraform Apply (Prod)
        working-directory: terraform
        run: terraform apply -auto-approve prod.tfplan
