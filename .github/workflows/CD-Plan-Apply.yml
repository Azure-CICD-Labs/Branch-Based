name: Terraform Plan and Apply

# Trigger on pushes to dev and main, and on PRs targeting these branches.
on:
  push:
    branches: [dev, main]
  pull_request:
    branches: [dev, main]

# Ensure the workflow can read contents and write id-tokens and PR comments if needed.
permissions:
  id-token: write
  contents: read
  pull-requests: write

# These environment variables are used by the Terraform Azure provider.
env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  TFSTATE_CONTAINER_NAME: ${{ vars.TFSTATE_CONTAINER_NAME }}

jobs:
  #################################################################
  # Terraform Plan (runs on both dev and main, including PRs)
  #################################################################
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    # This environment variable tells the Azure provider to skip automatic registration
    env:
      ARM_SKIP_PROVIDER_REGISTRATION: true
    outputs:
      tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Plan
        id: tf-plan
        run: |
          # Run terraform plan and capture the exit code.
          exitcode=0
          terraform plan -detailed-exitcode -no-color -out=tfplan || exitcode=$?
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
          if [ $exitcode -eq 1 ]; then
            echo "Terraform Plan Failed!"
            exit 1
          fi

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

      - name: Create Plan Summary Output
        id: tf-plan-string
        run: |
          TERRAFORM_PLAN=$(terraform show -no-color tfplan)
          delimiter=$(openssl rand -hex 8)
          echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## Terraform Plan Output" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo '```terraform' >> $GITHUB_OUTPUT
          echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "</details>" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT

      - name: Publish Plan to Task Summary
        env:
          SUMMARY: ${{ steps.tf-plan-string.outputs.summary }}
        run: echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY

      - name: Comment Plan on Pull Request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const summary = `\n${process.env.SUMMARY}\n`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            })

  #####################################################################################
  # Terraform Apply for dev branch (manual approval via GitHub Environment "dev")
  #####################################################################################
  terraform-apply-dev:
    name: Terraform Apply – Dev
    needs: terraform-plan
    # Only run on push events to dev and when terraform plan indicates changes (exit code 2).
    if: github.ref == 'refs/heads/dev' && needs.terraform-plan.outputs.tfplanExitCode == '2'
    runs-on: ubuntu-latest
    # Assign the job to the "dev" environment. You can require manual approvals on this environment.
    environment:
      name: dev
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

  #####################################################################################
  # Terraform Apply for prod branch (auto-run on push, not on PR)
  #####################################################################################
  terraform-apply-prod:
    name: Terraform Apply – Prod
    needs: terraform-plan
    # Only run on push events (not on PR) to main and if there are changes.
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request' && needs.terraform-plan.outputs.tfplanExitCode == '2'
    runs-on: ubuntu-latest
    # Assign the job to the "prod" environment (which you can protect as needed).
    environment: prod
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan