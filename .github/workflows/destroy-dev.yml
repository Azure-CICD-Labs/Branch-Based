name: Terraform Destroy Dev

on:
  workflow_dispatch: {}  # Manual run only

permissions:
  contents: read
  id-token: write

jobs:
  destroy-dev-job:
    name: Destroy Dev Resources
    runs-on: ubuntu-latest
    environment: dev

    # Only allow if we have the 'dev' branch selected in the 'Run workflow' dropdown
    if: startsWith(github.ref, 'refs/heads/dev')

    env:
      TF_VAR_container_name: ${{ vars.TFSTATE_CONTAINER_NAME }}

    steps:
      - name: Check out Repository
        uses: actions/checkout@v3

      # 1. Azure Login (Dev)
      - name: Azure Login (Dev)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # 2. Configure Env for Terraform OIDC
      - name: Configure Env for Terraform OIDC
        run: |
          echo "ARM_USE_OIDC=true" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      # 3. Setup Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      # 4. Terraform Init (Dev)
      - name: Terraform Init (Dev)
        working-directory: terraform
        run: |
          terraform init \
            -backend-config="container_name=${TF_VAR_container_name}" \
            -backend-config="key=multilayer-webapp-dev.tfstate"

      # 5. Terraform Destroy (Dev)
      - name: Terraform Destroy (Dev)
        working-directory: terraform
        run: |
          terraform destroy -auto-approve
