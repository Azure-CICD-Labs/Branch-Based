name: Terraform CD

on:
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write # needed for OIDC
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Azure Login (Dev)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Terraform Init (Dev)
        working-directory: terraform
        run: |
          terraform init \
            -backend-config="container_name=dev-tfstate" \
            -backend-config="key=multilayer-webapp-dev.tfstate"

      - name: Terraform Plan (Dev)
        working-directory: terraform
        run: terraform plan -var-file="dev.tfvars" -out=dev.tfplan

      - name: Terraform Apply (Dev)
        working-directory: terraform
        run: terraform apply -auto-approve dev.tfplan

  deploy-prod:
    name: Deploy to Prod
    runs-on: ubuntu-latest
    needs: deploy-dev
    environment: prod
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Azure Login (Prod)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Terraform Init (Prod)
        working-directory: terraform
        run: |
          terraform init \
            -backend-config="container_name=prod-tfstate" \
            -backend-config="key=multilayer-webapp-prod.tfstate"

      - name: Terraform Plan (Prod)
        working-directory: terraform
        run: terraform plan -var-file="prod.tfvars" -out=prod.tfplan

      - name: Terraform Apply (Prod)
        working-directory: terraform
        run: terraform apply -auto-approve prod.tfplan
